#pragma checksum "/home/cybergoose/Quoridor-game/Quoridor/Quoridor/Views/Quoridor/Board.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e9a9bc3e888b1a77d78ba70a4bb2196f342dc8b7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Quoridor_Board), @"mvc.1.0.view", @"/Views/Quoridor/Board.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/cybergoose/Quoridor-game/Quoridor/Quoridor/Views/_ViewImports.cshtml"
using Quoridor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/cybergoose/Quoridor-game/Quoridor/Quoridor/Views/_ViewImports.cshtml"
using Quoridor.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e9a9bc3e888b1a77d78ba70a4bb2196f342dc8b7", @"/Views/Quoridor/Board.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d6523f1d92bb58a1dc5a8160c03cbb7ea3be3ab6", @"/Views/_ViewImports.cshtml")]
    public class Views_Quoridor_Board : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Game>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Quoridor", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "NewGame", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "PossibleMoves", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-ajax", new global::Microsoft.AspNetCore.Html.HtmlString("true"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-ajax-method", new global::Microsoft.AspNetCore.Html.HtmlString("POST"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-ajax-update", new global::Microsoft.AspNetCore.Html.HtmlString("#movesHelper"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-ajax-mode", new global::Microsoft.AspNetCore.Html.HtmlString("replace"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "/home/cybergoose/Quoridor-game/Quoridor/Quoridor/Views/Quoridor/Board.cshtml"
  
    ViewData["Title"] = "Quoridor";
    //Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("<h1>");
#nullable restore
#line 6 "/home/cybergoose/Quoridor-game/Quoridor/Quoridor/Views/Quoridor/Board.cshtml"
Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h1>\n\n");
            WriteLiteral("\n");
            WriteLiteral(@"
<div class=""buttons"">
    <button type=""button"" id=""restart"" class=""button above restart"">New game</button>
</div>

<div class=""gridcontainer0"">
    <div id=""number_of_left_walls_box"">
        <div><div class=""symbol1""></div><div class=""horizontal_wall symbol""></div><div class=""mul_sign_wall_num_container""><div class=""multiplication_sign"">×</div><div id=""num1"" class=""wall_num"">");
#nullable restore
#line 26 "/home/cybergoose/Quoridor-game/Quoridor/Quoridor/Views/Quoridor/Board.cshtml"
                                                                                                                                                                                              Write(ViewData["fPwalls"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div></div></div>\n        <div><div class=\"symbol2\"></div><div class=\"horizontal_wall symbol\"></div><div class=\"mul_sign_wall_num_container\"><div class=\"multiplication_sign\">×</div><div id=\"num2\" class=\"wall_num\">");
#nullable restore
#line 27 "/home/cybergoose/Quoridor-game/Quoridor/Quoridor/Views/Quoridor/Board.cshtml"
                                                                                                                                                                                              Write(ViewData["sPwalls"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div></div></div>\n    </div>\n    <div id=\"board_table_container\">\n        <div class=\"fade_box in hidden\" id=\"restart_message_box\">\n            Are you sure to start a new game?\n            <br>\n            (Current game will be lost.)\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e9a9bc3e888b1a77d78ba70a4bb2196f342dc8b77961", async() => {
                WriteLiteral(@"
                <div class=""button_container in_message_box"">
                    <!--<button type=""button"" class=""restart_yes_no"" id=""restart_no"">Cancel</button>
                    <button type=""button"" class=""restart_yes_no"" id=""restart_yes"">Start</button> -->
                    <input type=""button"" class=""restart_yes_no"" id=""restart_no"" value=""Cancel"">
                    <input type=""submit"" class=""restart_yes_no"" id=""restart_yes"" value=""Start"">
                </div>
            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n        </div>\n        <table id=\"board_table\" class=\"geek\" border=\"1\">\n            <tr class=\"row1\">\n                <td id=\"a0\" class=\"col cell\" ");
            WriteLiteral("></td>\n                <td class=\"between_cols vwall\" ");
            WriteLiteral("></td>\n                <td id=\"b0\" class=\"col cell\"></td>\n                <td class=\"between_cols vwall\" ");
            WriteLiteral("></td>\n                <td id=\"c0\" class=\"col cell\"></td>\n                <td class=\"between_cols vwall\" ");
            WriteLiteral("></td>\n                <td id=\"d0\" class=\"col cell\"></td>\n                <td class=\"between_cols vwall\" ");
            WriteLiteral("></td>\n                <td id=\"e0\" class=\"col cell\"><div class=\"pawn pawn0\" id=\"pawn0\"></div></td>\n                <td class=\"between_cols vwall\" ");
            WriteLiteral("></td>\n                <td id=\"f0\" class=\"col cell\"></td>\n                <td class=\"between_cols vwall\" ");
            WriteLiteral("></td>\n                <td id=\"g0\" class=\"col cell\"></td>\n                <td class=\"between_cols vwall\" ");
            WriteLiteral("></td>\n                <td id=\"h0\" class=\"col cell\"></td>\n                <td class=\"between_cols vwall\" ");
            WriteLiteral(@"></td>
                <td id=""i0"" class=""col cell""></td>
            </tr>
            <tr class=""between_rows"">
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
            </tr>
            <tr>
                <td id=""a1"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>");
            WriteLiteral(@"
                <td id=""b1"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""c1"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""d1"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""e1"" class=""col cell"" ");
            WriteLiteral(@"></td>
                <td class=""between_cols vwall""></td>
                <td id=""f1"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""g1"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""h1"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""i1"" class=""col cell""></td>
            </tr>
            <tr class=""between_rows"">
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>");
            WriteLiteral(@"
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
            </tr>
            <tr>
                <td id=""a2"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""b2"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""c2"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""d2"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""e2"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""f2"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""g2"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""h2"" class=");
            WriteLiteral(@"""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""i2"" class=""col cell""></td>
            </tr>
            <tr class=""between_rows"">
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
            </tr>
            <tr>
                <td id=""a3"" class=""col c");
            WriteLiteral(@"ell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""b3"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""c3"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""d3"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""e3"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""f3"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""g3"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""h3"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""i3"" class=""col cell""></td>
            </tr>
            <tr class=""between_rows"">
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwa");
            WriteLiteral(@"ll""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
            </tr>
            <tr>
                <td id=""a4"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""b4"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""c4"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""d4"" cl");
            WriteLiteral(@"ass=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""e4"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""f4"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""g4"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""h4"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""i4"" class=""col cell""></td>
            </tr>
            <tr class=""between_rows"">
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td");
            WriteLiteral(@" class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
            </tr>
            <tr>
                <td id=""a5"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""b5"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""c5"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""d5"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""e5"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""f5"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td ");
            WriteLiteral(@"id=""g5"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""h5"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""i5"" class=""col cell""></td>
            </tr>
            <tr class=""between_rows"">
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
 ");
            WriteLiteral(@"               <td class=""col hwall""></td>
            </tr>
            <tr>
                <td id=""a6"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""b6"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""c6"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""d6"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""e6"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""f6"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""g6"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""h6"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""i6"" class=""col cell""></td>
            </tr>
            <tr class=""between_rows"">
       ");
            WriteLiteral(@"         <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
            </tr>
            <tr>
                <td id=""a7"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""b7"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                ");
            WriteLiteral(@"<td id=""c7"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""d7"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""e7"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""f7"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""g7"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""h7"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""i7"" class=""col cell""></td>
            </tr>
            <tr class=""between_rows"">
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall");
            WriteLiteral(@"""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
                <td class=""between_cols""></td>
                <td class=""col hwall""></td>
            </tr>
            <tr class=""row10"">
                <td id=""a8"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""b8"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""c8"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""d8"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""e8"" class=""col cell""><div class=""pawn pawn1"" id=""pawn1""></div></td>
    ");
            WriteLiteral(@"            <td class=""between_cols vwall""></td>
                <td id=""f8"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""g8"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""h8"" class=""col cell""></td>
                <td class=""between_cols vwall""></td>
                <td id=""i8"" class=""col cell""></td>
            </tr>
        </table>
    </div>
</div>
<div>
    <div>
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e9a9bc3e888b1a77d78ba70a4bb2196f342dc8b726924", async() => {
                WriteLiteral("\n            <input type=\"submit\" name=\"btnsearch\" value=\"Search\" />\n            <div id=\"movesHelper\">\n");
#nullable restore
#line 384 "/home/cybergoose/Quoridor-game/Quoridor/Quoridor/Views/Quoridor/Board.cshtml"
                  Html.RenderPartial("PartialMoves", Model.PossibleMovePawn());

#line default
#line hidden
#nullable disable
                WriteLiteral("\n            </div>\n        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n    </div>\n    \n    \n");
            WriteLiteral("</div>\n\n\n");
            WriteLiteral("\n<script>\n    function moves() {\n        let myArray = ");
#nullable restore
#line 418 "/home/cybergoose/Quoridor-game/Quoridor/Quoridor/Views/Quoridor/Board.cshtml"
                 Write(ViewData["moves"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(";\n        console.log(myArray);\n    }\n    \n\n");
            WriteLiteral("</script>\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Game> Html { get; private set; }
    }
}
#pragma warning restore 1591
